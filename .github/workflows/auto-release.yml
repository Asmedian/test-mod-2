name: Auto Release

on:
  # schedule:
  #   - cron: '0 * * * *' # Запуск раз в час
  workflow_dispatch: # Возможность запустить вручную

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v4

      - name: Получение текущей версии
        id: version
        run: echo "VERSION=$(awk -F= '/^Version/{print $2}' ERA_Project.ini | tr -d ' ')" >> $GITHUB_ENV

      - name: Получение последнего релиза
        id: latest_release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/Asmedian/test-mod-2/releases/latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Сравнение версий
        id: compare
        run: |
          LATEST_VERSION=$(echo '${{ steps.latest_release.outputs.data }}' | jq -r '.tag_name')
          if [[ "$VERSION" > "$LATEST_VERSION" ]]; then
            echo "NEW_VERSION=true" >> $GITHUB_ENV
          else
            echo "NEW_VERSION=false" >> $GITHUB_ENV
          fi

      - name: Создание архива
        if: env.NEW_VERSION == 'true'
        run: |
          zip -r era.zip . -x "*.git* some_large_folder/*"

      - name: Создание нового релиза
        if: env.NEW_VERSION == 'true'
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Загрузка архива в релиз
        if: env.NEW_VERSION == 'true'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./era.zip
          asset_name: era.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
